<?xml version="1.0" encoding="UTF-8"?>
<definitions
	xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
	xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC"
	xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
	xmlns:flowable="http://flowable.org/bpmn"
	typeLanguage="http://www.w3.org/2001/XMLSchema"
	expressionLanguage="http://www.w3.org/1999/XPath"
	targetNamespace="http://www.flowable.org/processdef">
	<process id="orderProcess"
				name="A simple order process flow"
				isExecutable="true">
		<startEvent 
			id="start"
		/>
		<sequenceFlow 
			sourceRef="start" 
			targetRef="conformPayment"
		/>
		<userTask 
			id="conformPayment"
			name="Get the payment status"
			flowable:assignee="rahul"
		/>
		<sequenceFlow 
			sourceRef="conformPayment"
			targetRef="decision"
		/>
		<exclusiveGateway
			id="decision"
		/>
		<sequenceFlow
			sourceRef="decision"
			targetRef="orderConform"
		>
			<conditionExpression
				xsi:type="tFormalExpression"
			>
				<![CDATA[
					${paymentSuccess}
				]]>
			</conditionExpression>
		</sequenceFlow>
		<sequenceFlow
			sourceRef="decision"
			targetRef="paymentFailed"
		>
			<conditionExpression xsi:type="tFormalExpression">
		        <![CDATA[
		          ${!paymentSuccess}
		        ]]>
		 	</conditionExpression>
		</sequenceFlow>
		<serviceTask 
			id="orderConform"
			name="Order conform"
			flowable:expression="#{orderService.conformOrder(execution)}" 
		>
			<extensionElements>
				<flowable:mapException errorCode="myException"/>
			</extensionElements>
		</serviceTask>
		<boundaryEvent id="orderConformError" attachedToRef="orderConform">
		  <errorEventDefinition errorRef="myError"/>
		</boundaryEvent>
		<sequenceFlow
			sourceRef="orderConformError"
			targetRef="handleError"
		/>
		<serviceTask
			id="handleError"
			name="Handle Error"
			flowable:expression="#{orderService.handleError(execution)}"
		/>
		<sequenceFlow
			sourceRef="handleError"
			targetRef="end"
		/>
		<sequenceFlow 
			sourceRef="orderConform"
			targetRef="checkDuplicate" 
		/>
		<serviceTask 
			id="paymentFailed"
			name="Order Failed"
			flowable:expression="#{orderService.paymentPending(execution)}"
		/>
		
		<sequenceFlow 
			sourceRef="paymentFailed"
			targetRef="end"
		/>
		<userTask 
			id="checkDuplicate"
			name="check Duplicate"
			flowable:assignee="rahul" 
		/>
		<sequenceFlow 
			sourceRef="checkDuplicate"
			targetRef="decideDuplicate" 
		/>
		<exclusiveGateway
			id="decideDuplicate"
		/>
		<sequenceFlow
			sourceRef="decideDuplicate"
			targetRef="suspendOrder"
		>
			<conditionExpression
				xsi:type="tFormalExpression"
			>
				<![CDATA[
					${isDuplicate}
				]]>
			</conditionExpression>
		</sequenceFlow>
		<sequenceFlow
			sourceRef="decideDuplicate"
			targetRef="createJob"
		>
			<conditionExpression xsi:type="tFormalExpression">
		        <![CDATA[
		          ${!isDuplicate}
		        ]]>
		 	</conditionExpression>
		</sequenceFlow>
		<serviceTask 
			id="suspendOrder"
			name="Suspend Order"
			flowable:expression="#{orderService.suspendOrder(execution)}"
		/>
		<sequenceFlow 
			sourceRef="suspendOrder"
			targetRef="end"
		/>
		<serviceTask 
			id="createJob"
			name="Create Job"
			flowable:expression="#{orderService.createJob(execution)}"
		/>
		<sequenceFlow 
			sourceRef="createJob"
			targetRef="end"
		/>
		<endEvent 
			id="end"
		/>
	</process>
	<error id="myError" errorCode="myException"/>
</definitions>